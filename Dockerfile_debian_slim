FROM debian:bookworm-slim as base

# FROM HERE
# https://github.com/LycheeOrg/Lychee-Docker/blob/master/Dockerfile

# Environment variables
ENV PUID='1000'
ENV PGID='1000'
ENV USER='user'

# x downlaods
RUN apt-get update && apt-get install -y xvfb \
    x11vnc \
    bash 

# vim \
# xterm \
# xeyes \
# sudo 

RUN apt-get update && apt-get install -y  vim \
    # xterm \
    # xeyes \
    htop \
    sudo 


RUN apt-get update && apt-get install -y   fluxbox \
    x11-utils # for xdpyinfo \
    bash \
    vim \
    terminus-font 




# RUN  sed -r -i "s/\[exec\] \(xterm\) \{xterm\}/\[exec\] \(st\) \{st -f 'xos4 Terminus-14'\}/" /usr/share/fluxbox/menu 	 \

RUN mkdir -p /opt

COPY bootstrap.sh /opt

# curl downloads
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates


# Chrome dependency Instalation
# FROM HERE
# https://github.com/Dmitry-Ostashev/testcafe-kubernetes-example/blob/main/Dockerfile
RUN apt-get update && apt-get install -y \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    #    libgtk-4-1 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    libu2f-udev \
    libvulkan1 \
    gcc
# Chrome instalation 
RUN curl -LO  https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

RUN apt-get install -y ./google-chrome-stable_current_amd64.deb
# RUN rm google-chrome-stable_current_amd64.deb
# Check chrome version
RUN echo "Chrome: " && google-chrome --version

RUN apt-get update && apt-get install -y \
    adduser

RUN apt-get autoremove -y \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && rm -rf /var/lib/apt/lists/*

RUN addgroup --gid "$PGID" "$USER" && \
    # adduser --gecos '' --no-create-home --disabled-password --uid "$PUID" --gid "$PGID" "$USER"
    adduser --gecos '' --disabled-password --uid "$PUID" --gid "$PGID" "$USER"

# RUN adduser -D user 

RUN mkdir -p /etc/sudoers.d 
RUN echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/user \
    && chmod 0440 /etc/sudoers.d/user

# install rust

ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH \
    RUST_VERSION=1.74.0

# RUN set -eux; \
#    #apkArch="$(apk --print-arch)"; \
#    apkArch="$(x86_64)"; \
#    case "$apkArch" in \
#    x86_64) rustArch='x86_64-unknown-linux-musl'; rustupSha256='7aa9e2a380a9958fc1fc426a3323209b2c86181c6816640979580f62ff7d48d4' ;; \
#    aarch64) rustArch='aarch64-unknown-linux-musl'; rustupSha256='b1962dfc18e1fd47d01341e6897cace67cddfabf547ef394e8883939bd6e002e' ;; \
#    *) echo >&2 "unsupported architecture: $apkArch"; exit 1 ;; \
#    esac; 

# ENV rustArch 'x86_64-unknown-linux-musl' \
#    rustupSha256 '7aa9e2a380a9958fc1fc426a3323209b2c86181c6816640979580f62ff7d48d4'

RUN set -eux; \
    url="https://static.rust-lang.org/rustup/archive/1.26.0/x86_64-unknown-linux-musl/rustup-init"; \
    wget "$url"; \ 
    echo "7aa9e2a380a9958fc1fc426a3323209b2c86181c6816640979580f62ff7d48d4 *rustup-init" | sha256sum -c -; 
RUN chmod +x rustup-init; \
    ls -la rustup-init; \
    # musl
    # ./rustup-init -y --no-modify-path --profile minimal --default-toolchain 1.74.0 --default-host x86_64-unknown-linux-musl; \
    ./rustup-init -y --no-modify-path --profile default --default-toolchain stable --default-host x86_64-unknown-linux-gnu; \
    rm rustup-init; 

# RUN set -eux; \
#    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
#    rustup --version; \
#    cargo --version; \
 #   rustc --version;



USER $USER
ENV HOME /home/$USER
WORKDIR /home/$USER

CMD ["sh","/opt/bootstrap.sh"]    